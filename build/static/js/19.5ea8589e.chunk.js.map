{"version":3,"sources":["components/ContactUs/ContactUs.module.css","components/icons/msg-sent.svg","components/ContactUs/ContactUs.js"],"names":["module","exports","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMsgSent","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","ContactUs","useState","status","setStatus","isMsgSent","setIsMsgSent","history","useHistory","useForm","register","handleSubmit","errors","onSubmit","data","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","response","json","result","console","log","required","errorMessage","error","className","classes","errorMsg","Helmet","name","content","contact_container","style","animationName","msg_sent","msg_icon","color","backHome","onClick","push","contact_form","contact_title","message","type","placeholder","company","city","state","country","phone","pattern","value","email","subject"],"mappings":"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","file":"static/js/19.5ea8589e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_container\":\"ContactUs_contact_container__2nQpw\",\"message\":\"ContactUs_message__3ZV_U\",\"contact_form\":\"ContactUs_contact_form__3QipS\",\"errorMsg\":\"ContactUs_errorMsg__1HlHU\",\"contact_title\":\"ContactUs_contact_title__1A66v\",\"msg_sent\":\"ContactUs_msg_sent__Ts136\",\"msg_icon\":\"ContactUs_msg_icon__YPTQN\",\"backHome\":\"ContactUs_backHome__24z41\",\"contact-title\":\"ContactUs_contact-title__1oi3R\",\"msg-sent\":\"ContactUs_msg-sent__1Gen6\",\"grow\":\"ContactUs_grow__1fdVP\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMsgSent(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 109,\n    height: 111,\n    viewBox: \"0 0 109 111\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M95.3753 61.6975C92.5141 60.68 89.4712 60.125 86.292 60.125C79.0648 60.125 72.1337 63.0487 67.0233 68.2528C61.913 73.4569 59.042 80.5152 59.042 87.875C59.042 89.4475 59.1782 90.9737 59.4053 92.5H13.6253C11.2163 92.5 8.90589 91.5254 7.20244 89.7907C5.49898 88.056 4.54199 85.7033 4.54199 83.25V27.75C4.54199 22.6163 8.58408 18.5 13.6253 18.5H86.292C88.701 18.5 91.0114 19.4746 92.7149 21.2093C94.4183 22.944 95.3753 25.2967 95.3753 27.75V61.6975ZM106.729 78.625L84.0212 101.75L68.1253 85.5625L74.9378 78.625L84.0212 87.875L99.917 71.6875L106.729 78.625ZM13.6253 27.75V37L49.9587 60.125L86.292 37V27.75L49.9587 50.875L13.6253 27.75Z\",\n    fill: \"#1F2E60\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMsgSent);\nexport default __webpack_public_path__ + \"static/media/msg-sent.70b4b3da.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nimport classes from './ContactUs.module.css';\n\nimport { ReactComponent as MsgSentIcon } from './../icons/msg-sent.svg'\nimport { Helmet } from 'react-helmet';\n\nexport default function ContactUs() {\n\n    const [status, setStatus] = useState(\"SUBMIT\");\n    const [isMsgSent, setIsMsgSent] = useState(false);\n\n    const history = useHistory();\n    \n    const routeChange = () =>{ \n    history.push(`/`);\n}\n    const { register, handleSubmit, errors } = useForm();\n\n    const onSubmit = async (data, e) => {\n      e.preventDefault();\n\n    setStatus(\"Sending...\");\n    //\n    let response = await fetch(\"https://www.manexerp.com/api/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(data),\n    });\n    setStatus(\"SUBMIT\"); \n    setIsMsgSent(true);\n    let result = await response.json();\n    console.log(result.status);\n  };\n\n\nconst required = \"*Please complete this required field\";\nconst pattern = \"*Email is not valid\";\n// const maxLength = \"*Your input exceeds maximum length\";\n\nconst errorMessage = (error) => {\n  return <p className={classes.errorMsg}>{error}</p>;\n};\n    return (\n      <div>\n        <Helmet>\n        <title>Contact Us </title>\n        <meta\n          name=\"description\"\n          content=\"Contact Us\" \n        />\n        <meta\n            name=\"keywords\"\n            content=\"EMS industry, ERP, MES, EQS\"\n          />\n      </Helmet>\n        <div className={classes.contact_container} style={isMsgSent? {} : {animationName: \"grow\"}}>\n\n          {\n            isMsgSent? \n            <div className={classes.msg_sent}>\n              <div className={classes.msg_icon}> <MsgSentIcon/> </div>\n              <p>\n                Thank you for your interest in <span style={{color: \"red\"}}> manex </span>!\n                <br/>\n                Your information is forwarded <br/>\n                 to our sales team.\n                <br/>\n                We will respond to <br/>\n                your inquiry promptly!\n              </p>\n\n              <button className={classes.backHome} onClick={routeChange}> Back to home </button>\n\n            </div>\n            \n             :\n\n            <form className={classes.contact_form} onSubmit={handleSubmit(onSubmit)}>\n                <div className={classes.contact_title}>\n                    Contact Us \n                </div>\n                <div className={classes.message}>\n                    <p>\n                    Thank you for your interest in our CUBE system. <br/> \n                    Please complete the form below  so we can respond back to you properly.<br/>\n                    </p>\n                </div>\n                <div>\n                    <input type=\"text\"  id=\"name\" name=\"name\" placeholder=\"Name*\"  ref={register({required: true,})} />\n                    {errors.name && errors.name.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Job Title*\" ref={register({required: true,})} />\n                    {errors.title && errors.title.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"company\" name=\"company\" placeholder=\"Company*\" ref={register({required: true,})} />\n                    {errors.company && errors.company.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"city\" name=\"city\" placeholder=\"City*\" ref={register({required: true,})} />\n                    {errors.city && errors.city.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"state\" name=\"state\" placeholder=\"State/Province*\" ref={register({required: true,})} />\n                    {errors.state && errors.state.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"country\" name=\"country\" placeholder=\"Country*\" ref={register({required: true,})} />\n                    {errors.country && errors.country.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"tel\" id=\"phone\" name=\"phone\" placeholder=\"Phone Number*\" /* pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" */ ref={register({required: true,})} />\n                    {errors.phone && errors.phone.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email Address*\"  ref={register({\n                            required: true,\n                            pattern: {\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                            },\n                        })} />\n                    {errors.email && errors.email.type === \"required\" && errorMessage(required)}\n                    {errors.email && errors.email.type === \"pattern\" && errorMessage(pattern)}\n\n                </div>\n                <div>\n                  <input type=\"text\" id=\"subject\" name=\"subject\" placeholder=\"Subject*\" ref={register({required: true,})} />\n                  {errors.subject && errors.subject.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                  <textarea id=\"message\" name=\"message\" placeholder=\"Message*\" ref={register({required: true,})} />\n                  {errors.message && errors.message.type === \"required\" && errorMessage(required)}\n                </div>\n                <button type=\"submit\">{status}</button>\n            </form>\n        }\n        </div>\n      </div>\n      \n    )\n}\n\n\n"],"sourceRoot":""}