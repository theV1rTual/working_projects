{"version":3,"sources":["components/ContactUs/ContactUs.module.css","components/ContactUs/ContactUsService.js","components/ContactUs/MainContactUsPage.js"],"names":["module","exports","postMessage","data","a","axios","method","url","then","response","status","catch","error","MainContactUsPage","history","useHistory","useForm","register","handleSubmit","errors","useState","setStatus","onSubmit","e","preventDefault","push","required","errorMessage","className","classes","errorMsg","contact_container","Helmet","name","content","contact_form","contact_title","message","type","id","placeholder","ref","title","company","city","state","country","phone","pattern","value","email","subject"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,kBAAoB,qCAAqC,QAAU,2BAA2B,aAAe,gCAAgC,SAAW,4BAA4B,cAAgB,iCAAiC,SAAW,4BAA4B,SAAW,4BAA4B,UAAY,6BAA6B,SAAW,4BAA4B,WAAW,4BAA4B,KAAO,0B,4HCCpb,SAAeC,EAA9B,kC,4CAAe,WAA2BC,GAA3B,SAAAC,EAAA,sEAEEC,IAAM,CACfC,OAAQ,OACRC,IAAK,oCACLJ,KAAMA,IAETK,MAAK,SAACC,GACH,OAAOA,EAAWA,EAASN,KAAKO,OAAQ,QAE3CC,OAAM,SAACC,GACJ,OAAOA,KAXA,oF,gDC2GAC,UAtGW,SAACD,GACvB,IAAME,EAAUC,cAChB,EAA0CC,cAAnCC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAC/B,EAA4BC,mBAAS,UAArC,mBAAOV,EAAP,KAAeW,EAAf,KAEMC,EAAQ,uCAAG,WAAMnB,EAAMoB,GAAZ,SAAAnB,EAAA,6DACbmB,EAAEC,iBACFH,EAAU,cAFG,SAGQnB,EAAYC,GAHpB,OAKG,iBALH,OAMTW,EAAQW,KAAK,qBAGbX,EAAQW,KAAK,kBATJ,2CAAH,wDAaRC,EAAW,uCAGXC,EAAe,SAACf,GAClB,OAAO,mBAAGgB,UAAWC,IAAQC,SAAtB,SAAiClB,KAG5C,OACI,sBAAKgB,UAAWC,IAAQE,kBAAxB,UACI,eAACC,EAAA,EAAD,WACI,gDACA,sBACAC,KAAK,cACLC,QAAQ,eAER,sBACID,KAAK,WACLC,QAAQ,mCAIhB,uBAAMN,UAAWC,IAAQM,aAAcb,SAAUJ,EAAaI,GAA9D,UACI,qBAAKM,UAAWC,IAAQO,cAAxB,wBAGA,qBAAKR,UAAWC,IAAQQ,QAAxB,SACI,iFACoD,uBADpD,0EAE2E,4BAG/E,gCACI,uBAAOC,KAAK,OAAQC,GAAG,OAAON,KAAK,OAAOO,YAAY,QAASC,IAAKxB,EAAS,CAACS,UAAU,MACvFP,EAAOc,MAA6B,aAArBd,EAAOc,KAAKK,MAAuBX,EAAaD,MAEpE,gCACI,uBAAOY,KAAK,OAAOC,GAAG,QAAQN,KAAK,QAAQO,YAAY,aAAaC,IAAKxB,EAAS,CAACS,UAAU,MAC5FP,EAAOuB,OAA+B,aAAtBvB,EAAOuB,MAAMJ,MAAuBX,EAAaD,MAEtE,gCACI,uBAAOY,KAAK,OAAOC,GAAG,UAAUN,KAAK,UAAUO,YAAY,WAAWC,IAAKxB,EAAS,CAACS,UAAU,MAC9FP,EAAOwB,SAAmC,aAAxBxB,EAAOwB,QAAQL,MAAuBX,EAAaD,MAE1E,gCACI,uBAAOY,KAAK,OAAOC,GAAG,OAAON,KAAK,OAAOO,YAAY,QAAQC,IAAKxB,EAAS,CAACS,UAAU,MACrFP,EAAOyB,MAA6B,aAArBzB,EAAOyB,KAAKN,MAAuBX,EAAaD,MAEpE,gCACI,uBAAOY,KAAK,OAAOC,GAAG,QAAQN,KAAK,QAAQO,YAAY,kBAAkBC,IAAKxB,EAAS,CAACS,UAAU,MACjGP,EAAO0B,OAA+B,aAAtB1B,EAAO0B,MAAMP,MAAuBX,EAAaD,MAEtE,gCACI,uBAAOY,KAAK,OAAOC,GAAG,UAAUN,KAAK,UAAUO,YAAY,WAAWC,IAAKxB,EAAS,CAACS,UAAU,MAC9FP,EAAO2B,SAAmC,aAAxB3B,EAAO2B,QAAQR,MAAuBX,EAAaD,MAE1E,gCACI,uBAAOY,KAAK,OAAOC,GAAG,QAAQN,KAAK,QAAQO,YAAY,gBAAgBC,IAAKxB,EAAS,CAACS,UAAU,MAC/FP,EAAO4B,OAA+B,aAAtB5B,EAAO4B,MAAMT,MAAuBX,EAAaD,MAEtE,gCACI,uBAAOY,KAAK,QAAQC,GAAG,QAAQN,KAAK,QAAQO,YAAY,iBAAkBC,IAAKxB,EAAS,CAChFS,UAAU,EACVsB,QAAS,CACTC,MAAO,gDAGd9B,EAAO+B,OAA+B,aAAtB/B,EAAO+B,MAAMZ,MAAuBX,EAAaD,GACjEP,EAAO+B,OAA+B,YAAtB/B,EAAO+B,MAAMZ,MAAsBX,EAlEpD,0BAoEJ,gCACI,uBAAOW,KAAK,OAAOC,GAAG,UAAUN,KAAK,UAAUO,YAAY,WAAWC,IAAKxB,EAAS,CAACS,UAAU,MAC9FP,EAAOgC,SAAmC,aAAxBhC,EAAOgC,QAAQb,MAAuBX,EAAaD,MAE1E,gCACI,0BAAUa,GAAG,UAAUN,KAAK,UAAUO,YAAY,WAAWC,IAAKxB,EAAS,CAACS,UAAU,MACrFP,EAAOkB,SAAmC,aAAxBlB,EAAOkB,QAAQC,MAAuBX,EAAaD,MAE1E,wBAAQY,KAAK,SAAb,SAAuB5B","file":"static/js/21.4a875cf6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_container\":\"ContactUs_contact_container__2nQpw\",\"message\":\"ContactUs_message__3ZV_U\",\"contact_form\":\"ContactUs_contact_form__3QipS\",\"errorMsg\":\"ContactUs_errorMsg__1HlHU\",\"contact_title\":\"ContactUs_contact_title__1A66v\",\"msg_sent\":\"ContactUs_msg_sent__Ts136\",\"msg_icon\":\"ContactUs_msg_icon__YPTQN\",\"error_img\":\"ContactUs_error_img__1Bh8b\",\"backHome\":\"ContactUs_backHome__24z41\",\"msg-sent\":\"ContactUs_msg-sent__1Gen6\",\"grow\":\"ContactUs_grow__1fdVP\"};","import axios from 'axios';\n\nexport default async function postMessage(data) {\n\n    return await axios({\n        method: \"POST\",\n        url: \"https://www.manex.com/api/contact\",\n        data: data\n    })\n    .then((response) => {\n        return response ? response.data.status: null;\n    })\n    .catch((error) => {\n        return error\n    })    \n} \n","import classes from './ContactUs.module.css';\nimport { useHistory } from \"react-router\";\nimport { Helmet } from 'react-helmet';\nimport postMessage from './ContactUsService';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\n\nconst MainContactUsPage = (error) => {\n    const history = useHistory();\n    const {register, handleSubmit, errors } = useForm();\n    const [status, setStatus] = useState(\"SUBMIT\");\n\n    const onSubmit = async(data, e) => {\n        e.preventDefault();\n        setStatus(\"SENDING...\")\n        let response = await postMessage(data);\n\n        if(response === \"Message Sent\" ) {\n            history.push(\"/complete-message\")\n        }\n        else {\n            history.push(\"/error-message\")\n        }\n    }\n\n    const required = \"*Please complete this required field\";\n    const pattern = \"*Email is not valid\";\n\n    const errorMessage = (error) => {\n        return <p className={classes.errorMsg}>{error}</p>;\n    };\n\n    return (\n        <div className={classes.contact_container}>\n            <Helmet>\n                <title>Contact Us </title>\n                <meta\n                name=\"description\"\n                content=\"Contact Us\" \n                />\n                <meta\n                    name=\"keywords\"\n                    content=\"EMS industry, ERP, MES, EQS\"\n                />\n            </Helmet>\n\n            <form className={classes.contact_form} onSubmit={handleSubmit(onSubmit)}>\n                <div className={classes.contact_title}>\n                    Contact Us\n                </div>\n                <div className={classes.message}>\n                    <p>\n                        Thank you for your interest in our CUBE system. <br/> \n                        Please complete the form below  so we can respond back to you properly.<br/>\n                    </p>\n                </div>\n                <div>\n                    <input type=\"text\"  id=\"name\" name=\"name\" placeholder=\"Name*\"  ref={register({required: true,})} />\n                    {errors.name && errors.name.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Job Title*\" ref={register({required: true,})}/>\n                    {errors.title && errors.title.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"company\" name=\"company\" placeholder=\"Company*\" ref={register({required: true,})}/>\n                    {errors.company && errors.company.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"city\" name=\"city\" placeholder=\"City*\" ref={register({required: true,})}/>\n                    {errors.city && errors.city.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"state\" name=\"state\" placeholder=\"State/Province*\" ref={register({required: true,})}/>\n                    {errors.state && errors.state.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"country\" name=\"country\" placeholder=\"Country*\" ref={register({required: true,})}/>\n                    {errors.country && errors.country.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"phone\" name=\"phone\" placeholder=\"Phone Number*\" ref={register({required: true,})}/>\n                    {errors.phone && errors.phone.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email Address*\"  ref={register({\n                            required: true,\n                            pattern: {\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                            },\n                        })} />\n                    {errors.email && errors.email.type === \"required\" && errorMessage(required)}\n                    {errors.email && errors.email.type === \"pattern\" && errorMessage(pattern)}\n                </div>\n                <div>\n                    <input type=\"text\" id=\"subject\" name=\"subject\" placeholder=\"Subject*\" ref={register({required: true,})}/>\n                    {errors.subject && errors.subject.type === \"required\" && errorMessage(required)}\n                </div>\n                <div>\n                    <textarea id=\"message\" name=\"message\" placeholder=\"Message*\" ref={register({required: true,})} />\n                    {errors.message && errors.message.type === \"required\" && errorMessage(required)}\n                </div>\n                <button type=\"submit\">{status}</button>\n            </form>\n        </div>\n    );\n\n}\n\nexport default MainContactUsPage;\n"],"sourceRoot":""}